@import "var.less"; // a few variables
@import "global.less"; // redefine pure element behavior & elements with ids
@import "grid.less";
@import "lava";

.spinner(@offset) {
  @keyframes ~"spin@{offset}" {
    0% { transform: rotate(0deg+@offset); }
    49% { transform: rotate(0deg+@offset); }
    50% { transform: rotate(270deg+@offset); }
    98% { transform: rotate(270deg+@offset); }
    100% { transform: rotate(360deg+@offset); }
  }
  [spin="@{offset}"] {
    animation-name: ~"spin@{offset}";
  }
}

.spinner(0);
.spinner(90);
.spinner(180);
.spinner(270);

[spin] {
  transform-origin: @cellSize/2 @cellSize/2;
  animation-duration: 5s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.reverse { animation-direction: reverse; }

.delayer(@ms) when (@ms >=0) {
  .delay@{ms} {
    animation-delay: ~"@{ms}ms";
  }
  .delayer(@ms - 100);
}
.delayer (@ms) when (@ms <0) {}
.delayer(8000);

[for=trigger-debug] {
  opacity: 0;
  display: block;
  bottom: 0;
  right: 0;
  position: fixed;
  #trigger-debug:checked { opacity: 1; }
}

#select-level {
 display: none; position: absolute;
 #trigger-debug:checked ~ & { display: block; }
}

#trigger-debug:checked ~ * {
  [lava]:hover:before { font-size: 1em; width: 25%; height: 10%; line-height: 1; }
  div>div { display: block; background: green; }
  div:hover >div, [id^=level] > div { background: inherit; }
}

.stairs {
  background: black;
  width: @cellSize;
  height: @cellSize;
}